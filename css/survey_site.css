.toggle {
    --uiToggleSize: var(--toggleSize, 1.25rem);
    --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
    --uiToggleColor: var(--toggleColor, #222);

    display: var(--toggleDisplay, inline-flex);
    position: relative;
}

.toggle_input {
    /*
      The pattern by Sara Soueidan https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
    */
    width: var(--uiToggleSize);
    height: var(--uiToggleSize);
    opacity: 0;

    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
}

/* 1. Calculation of the gap for the custom checkbox */
.toggle_label {
    display: inline-flex;
    min-height: var(--uiToggleSize);
    padding-left: calc(var(--uiToggleSize) + var(--toggleIndent, .4em));
}

.toggle_input:not(:disabled) ~ .toggle_label {
    cursor: pointer;
}

/* 1. Ems helps to calculate size of the checkbox */
.toggle_label::before,
.toggle_label::after {
    content: "";
    box-sizing: border-box;
    width: 1em;
    height: 1em;
    font-size: var(--uiToggleSize); /* 1 */

    position: absolute;
    left: 0;
    top: 0;
}

.toggle_label::before {
    border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
    z-index: 2;
}

.toggle_input:not(:disabled) ~ .toggle_label::after {
    background-color: var(--uiToggleColor);
    opacity: 0;
}

.toggle_input:not(:disabled):checked ~ .toggle_label::after {
    opacity: 1;
}

.toggle_text {
    margin-top: auto;
    margin-bottom: auto;
}

/* The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle
    1. Ems helps to calculate size and position of the arrow */
.toggle_input:not(:disabled) ~ .toggle_label .toggle_text::before {
    content: "";
    width: 0;
    height: 0;
    font-size: var(--uiToggleSize); /* 1 */

    border-left-width: 0;
    border-bottom-width: 0;
    border-left-style: solid;
    border-bottom-style: solid;
    border-color: var(--toggleArrowColor, #fff);

    position: absolute;
    top: .5428em;
    left: .25em;
    z-index: 3;

    transform-origin: left top;
    transform: rotate(-40deg) skew(10deg);
}

.toggle_input:not(:disabled):checked ~ .toggle_label .toggle_text::before {
    --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);

    width: .4em;
    height: .2em;
    border-left-width: var(--uiToggleArrowWidth);
    border-bottom-width: var(--uiToggleArrowWidth);
}

/* States */

/* focus state */
.toggle:focus-within {
    outline: var(--toggleOutlineWidthFocus, 3px) solid var(--toggleOutlineColorFocus, currentColor);
    outline-offset: var(--toggleOutlineOffsetFocus, 5px);
}

/* disabled state */
.toggle_input:disabled ~ .toggle_label {
    opacity: var(--toggleOpacityDisabled, .24);
    cursor: var(--toggleCursorDisabled, not-allowed);
}

/* The demo skin */
.toggle_label::before,
.toggle_label::after {
    border-radius: var(--toggleBorderRadius, 2px);
}

/* The animation of switching states */
.toggle_input:not(:disabled) ~ .toggle_label::before,
.toggle_input:not(:disabled) ~ .toggle_label::after {
    opacity: 1;
    transform-origin: center center;
    will-change: transform;
    transition: transform .2s ease-out;
}

.toggle_input:not(:disabled) ~ .toggle_label::before {
    transform: rotateY(0deg);
    transition-delay: .2s;
}

.toggle_input:not(:disabled) ~ .toggle_label::after {
    transform: rotateY(90deg);
}

.toggle_input:not(:disabled):checked ~ .toggle_label::before {
    transform: rotateY(-90deg);
    transition-delay: 0s;
}

.toggle_input:not(:disabled):checked ~ .toggle_label::after {
    transform: rotateY(0deg);
    transition-delay: .2s;
}

.toggle_text::before {
    opacity: 0;
}

.toggle_input:not(:disabled):checked ~ .toggle_label .toggle_text::before {
    opacity: 1;
    transition: opacity .1s ease-out .3s, width .1s ease-out .5s, height .2s ease-out .3s;
}

.toggle {
    --toggleColor: #690e90;
    --toggleBackgroundColor: #9b59b6;
    --toggleSize: 50px;
}

.box {
    /*min-height: 100vh; margin: 0; */
    display: flex;
    flex-direction: column;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Open Sans, Ubuntu, Fira Sans, Helvetica Neue, sans-serif;
    margin: auto;
    margin-top: 25px;
    margin-bottom: 25px;
}

.box h2 {
    margin: 0;
    font-size: 1.3rem;
    font-weight: 700;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Open Sans, Ubuntu, Fira Sans, Helvetica Neue, sans-serif;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    padding-right: 1.5rem;
    padding-left: 1.5rem;
}

.box span {
    font-size: 1.2rem;
    font-weight: 700;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Open Sans, Ubuntu, Fira Sans, Helvetica Neue, sans-serif;
}

.toggle {
    margin-left: 1.75rem;
    margin-right: 1.75rem;
}

.page_toggle {
    font-size: 1.75rem;
    font-weight: 700;
    color: #fff;
}

.page_toggle:nth-child(n+2) {
    margin-top: .75rem;
    margin-bottom: .75rem;
}